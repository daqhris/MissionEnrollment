{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "contentType",
						"type": "uint256"
					}
				],
				"name": "ABIChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "newVersion",
						"type": "uint64"
					}
				],
				"name": "VersionChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "contentTypes",
						"type": "uint256"
					}
				],
				"name": "ABI",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "clearRecords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "recordVersions",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "contentType",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "setABI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"ABI(bytes32,uint256)": {
					"params": {
						"contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
						"node": "The ENS node to query"
					},
					"returns": {
						"_0": "contentType The content type of the return value",
						"_1": "data The ABI data"
					}
				},
				"clearRecords(bytes32)": {
					"params": {
						"node": "The node to update."
					}
				},
				"setABI(bytes32,uint256,bytes)": {
					"params": {
						"contentType": "The content type of the ABI",
						"data": "The ABI data.",
						"node": "The node to update."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"ABI(bytes32,uint256)": {
					"notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
				},
				"clearRecords(bytes32)": {
					"notice": "Increments the record version associated with an ENS node. May only be called by the owner of that node in the ENS registry."
				},
				"setABI(bytes32,uint256,bytes)": {
					"notice": "Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"package/contracts/resolvers/profiles/ABIResolver.sol": "ABIResolver"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549",
				"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		},
		"package/contracts/resolvers/ResolverBase.sol": {
			"keccak256": "0xd658518ab7ba2f0dac8bb87b55f87546aebb9270dac00ca8d185a21e0cad84d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd09d9eb153b95b9087ce336af2ac6010a83f1d355e400255011d95ffd14eb6a",
				"dweb:/ipfs/QmPZwBi5RBbpNCcrjbpbasDF6kEX7PtybtTx29Kyaa9Dcv"
			]
		},
		"package/contracts/resolvers/profiles/ABIResolver.sol": {
			"keccak256": "0xc16d8eb14e75592965b8a7fa39ed13921c5b72912e074697f65ea439a99e15ef",
			"license": "MIT",
			"urls": [
				"bzz-raw://2870477ab2270f533bb18ffbc7d49b73aef21272af1aa601bdfcc5925c56b4c5",
				"dweb:/ipfs/QmRDq9S2MDZQ6vbWGEEysdyi5Be7QLiacmpx6W1rntG9LZ"
			]
		},
		"package/contracts/resolvers/profiles/IABIResolver.sol": {
			"keccak256": "0x56e138d363d3ce001205e96492a8ac0a35114e76fd1cef4e428823904de9a0a2",
			"license": "MIT",
			"urls": [
				"bzz-raw://68d933b313718d6086847ec7783b64f2263a2af1e92f580dbd452fdcab57139e",
				"dweb:/ipfs/QmZcWzn1iNPDYQ3i1JmsQqmujPMEVsRv76RYkxoDSSPUFq"
			]
		},
		"package/contracts/resolvers/profiles/IVersionableResolver.sol": {
			"keccak256": "0x13c536aaead9efa1c25afcdc6b096834e4a13902633b0577370932d1918a4d82",
			"license": "MIT",
			"urls": [
				"bzz-raw://ffc7ef55b8ea9cea5370db8b164c37db2bcc57ba6979f9241864c578f7805bc0",
				"dweb:/ipfs/QmXSFaDsUHNskxqt6w9r76ZXc3gGtBGT1nGUCSu8TrHonR"
			]
		}
	},
	"version": 1
}