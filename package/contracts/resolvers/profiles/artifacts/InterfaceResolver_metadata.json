{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "a",
						"type": "address"
					}
				],
				"name": "AddrChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "newAddress",
						"type": "bytes"
					}
				],
				"name": "AddressChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "implementer",
						"type": "address"
					}
				],
				"name": "InterfaceChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "newVersion",
						"type": "uint64"
					}
				],
				"name": "VersionChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "addr",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					}
				],
				"name": "addr",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "clearRecords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					}
				],
				"name": "interfaceImplementer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "recordVersions",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "coinType",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "a",
						"type": "bytes"
					}
				],
				"name": "setAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "a",
						"type": "address"
					}
				],
				"name": "setAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					},
					{
						"internalType": "address",
						"name": "implementer",
						"type": "address"
					}
				],
				"name": "setInterface",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceID",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addr(bytes32)": {
					"params": {
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated address."
					}
				},
				"clearRecords(bytes32)": {
					"params": {
						"node": "The node to update."
					}
				},
				"interfaceImplementer(bytes32,bytes4)": {
					"params": {
						"interfaceID": "The EIP 165 interface ID to check for.",
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The address that implements this interface, or 0 if the interface is unsupported."
					}
				},
				"setAddr(bytes32,address)": {
					"params": {
						"a": "The address to set.",
						"node": "The node to update."
					}
				},
				"setInterface(bytes32,bytes4,address)": {
					"params": {
						"implementer": "The address of a contract that implements this interface for this node.",
						"interfaceID": "The EIP 165 interface ID.",
						"node": "The node to update."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addr(bytes32)": {
					"notice": "Returns the address associated with an ENS node."
				},
				"clearRecords(bytes32)": {
					"notice": "Increments the record version associated with an ENS node. May only be called by the owner of that node in the ENS registry."
				},
				"interfaceImplementer(bytes32,bytes4)": {
					"notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned."
				},
				"setAddr(bytes32,address)": {
					"notice": "Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry."
				},
				"setInterface(bytes32,bytes4,address)": {
					"notice": "Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"package/contracts/resolvers/profiles/InterfaceResolver.sol": "InterfaceResolver"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549",
				"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		},
		"package/contracts/resolvers/ResolverBase.sol": {
			"keccak256": "0xd658518ab7ba2f0dac8bb87b55f87546aebb9270dac00ca8d185a21e0cad84d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd09d9eb153b95b9087ce336af2ac6010a83f1d355e400255011d95ffd14eb6a",
				"dweb:/ipfs/QmPZwBi5RBbpNCcrjbpbasDF6kEX7PtybtTx29Kyaa9Dcv"
			]
		},
		"package/contracts/resolvers/profiles/AddrResolver.sol": {
			"keccak256": "0xc9234498bcd0ea2dd21dc662460e32018850dd4d9dc1e2319dea06ae79b6b7f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://35f79de4e0af6245dd20c25d20e47f296a0f91fee2e25c0cf6a2b1a610722095",
				"dweb:/ipfs/QmY5oCD3nFQ4UfNywiRnmzMwyqQxqZkJQM4ZTHeXNcsX6p"
			]
		},
		"package/contracts/resolvers/profiles/IAddrResolver.sol": {
			"keccak256": "0xbcd9810777380ca702291fc3e74690c492fc49f6fa0f78256fbc7a3e01315732",
			"license": "MIT",
			"urls": [
				"bzz-raw://7f17ed77c17f2d61815c50060a50ac5afe4b84761b04e961a6f085694f3011b2",
				"dweb:/ipfs/QmcsxD4nwQSuWVMXUs6sU2rgBGcASWg8bhnNbJS8SP9SUr"
			]
		},
		"package/contracts/resolvers/profiles/IAddressResolver.sol": {
			"keccak256": "0xa6bc0f0833a1c4052674cd41d245c8c23908e0ccb090c9ef0adffb21907fdf54",
			"license": "MIT",
			"urls": [
				"bzz-raw://dfa3dd50b7175f69b457744f2378949ee33ff5a1ed26d1368fa36337503edde4",
				"dweb:/ipfs/QmSC2P6ZPETKDkUrEwVtP8b9awK1w68FRhQQRth5GbvoGn"
			]
		},
		"package/contracts/resolvers/profiles/IInterfaceResolver.sol": {
			"keccak256": "0xbbe45357ac199d06362207c454ffa7580bd187b13007aea9c1f061da4e99c45d",
			"license": "MIT",
			"urls": [
				"bzz-raw://de6fe99256d83a41512eb2a979d280c5ae3c44683ebb3d60b85fc8c9815e59c1",
				"dweb:/ipfs/QmTXHWWQy3EBFZisvw3TQ4VGKvH81dtunX7HiCgGdywYaP"
			]
		},
		"package/contracts/resolvers/profiles/IVersionableResolver.sol": {
			"keccak256": "0x13c536aaead9efa1c25afcdc6b096834e4a13902633b0577370932d1918a4d82",
			"license": "MIT",
			"urls": [
				"bzz-raw://ffc7ef55b8ea9cea5370db8b164c37db2bcc57ba6979f9241864c578f7805bc0",
				"dweb:/ipfs/QmXSFaDsUHNskxqt6w9r76ZXc3gGtBGT1nGUCSu8TrHonR"
			]
		},
		"package/contracts/resolvers/profiles/InterfaceResolver.sol": {
			"keccak256": "0x0b7773237998b4a0a07118731d31825adda0069e2b51a72f52034ed17d634e9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://e041da95996215e27a53d13f571b9da0d99dc723d6e72454771aa7ca1a87ea12",
				"dweb:/ipfs/QmZvjTRRMNzCqfa4kyuZJBjCBho4eE2RV1kYsMVBohBNLo"
			]
		}
	},
	"version": 1
}