// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface EllipticCurve$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "EllipticCurve",
  "sourceName": "contracts/dnssec-oracle/algorithms/EllipticCurve.sol",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b27a64e24105642096eaae2d219684d97e65aa55e526b52c13bb64ea5cb6226464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220b27a64e24105642096eaae2d219684d97e65aa55e526b52c13bb64ea5cb6226464736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "EllipticCurve",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<EllipticCurve$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/dnssec-oracle/algorithms/EllipticCurve.sol:EllipticCurve",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<EllipticCurve$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "EllipticCurve",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<EllipticCurve$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/dnssec-oracle/algorithms/EllipticCurve.sol:EllipticCurve",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<EllipticCurve$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "EllipticCurve",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<EllipticCurve$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/dnssec-oracle/algorithms/EllipticCurve.sol:EllipticCurve",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<EllipticCurve$Type["abi"]>>;
}
